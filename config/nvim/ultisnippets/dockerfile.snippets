# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet gobuild "Create a multistage go build template" b
FROM golang:1.15.5-alpine3.12 as build

ENV GOPATH=""

RUN apk add --update --no-cache git build-base bash

RUN mkdir /opt/build

WORKDIR /opt/build

COPY ./$1 $1

RUN go build

FROM alpine:3.12

# Add user and group
RUN addgroup -S $2 \
	&& adduser -S $2 -G $2

# Copy required files into image
COPY --from=build /opt/build/build /usr/local/bin/$3

USER $2

ENTRYPOINT /usr/local/bin/$3
$0
endsnippet

snippet auser "Create an alpine user" b
# Add user and group
RUN addgroup -S $1 \
	&& adduser -S $1 -G $1
$0
endsnippet

snippet add "Adds an alpine package" b
RUN apk add --update --no-cache $1
endsnippet

